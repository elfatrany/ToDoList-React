{"version":3,"sources":["components/ToDoList.js","components/Addtodo.js","App.js","index.js"],"names":["ToDoList","todos","deleteTodo","length","divider","borderColor","borderWidth","p","borderRadius","w","maxW","base","sm","lg","xl","alignItems","map","todo","body","icon","isRound","size","onClick","id","colorScheme","m","Addtodo","addTodo","toast","useToast","useState","content","setContent","onSubmit","e","preventDefault","console","log","nanoid","title","status","duration","isClosable","mt","variant","placeholder","value","onChange","target","px","type","App","JSON","parse","localStorage","getItem","setTodos","useEffect","setItem","stringify","useColorMode","colorMode","toggleColorMode","alignSelf","mb","fontWeight","bgGradient","bgClip","newTodos","filter","ReactDOM","render","StrictMode","initialColorMode","document","getElementById"],"mappings":"2OAIe,SAASA,EAAT,GAAwC,IAArBC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,WAErC,OAAKD,EAAME,OAOH,cAAC,IAAD,CACAC,QAAS,cAAC,IAAD,IACTC,YAAY,WACZC,YAAY,MACZC,EAAE,IACFC,aAAa,KACbC,EAAE,OACFC,KAAM,CAACC,KAAM,OAAQC,GAAI,OAAQC,GAAI,OAAQC,GAAI,QACjDC,WAAW,UARX,SAUKd,EAAMe,KAAI,SAAAC,GAAI,OACX,eAAC,IAAD,WACI,cAAC,IAAD,UAAOA,EAAKC,OACZ,cAAC,IAAD,IACA,cAAC,IAAD,CAAYC,KAAM,cAAC,IAAD,IAAaC,QAAQ,OAAOC,KAAK,KAAKC,QAAS,kBAAMpB,EAAWe,EAAKM,SAH9EN,EAAKM,SAhB1B,cAAC,IAAD,CAAOC,YAAY,QAAQjB,EAAE,IAAIkB,EAAE,IAAIjB,aAAa,KAApD,sC,sCCiCGkB,MArCf,YAA+B,IAAZC,EAAW,EAAXA,QAETC,EAAQC,cAFY,EAyBIC,mBAAS,IAzBb,mBAyBnBC,EAzBmB,KAyBVC,EAzBU,KA2B1B,OACI,sBAAMC,SAxBV,SAAsBC,GAElB,GADAA,EAAEC,iBACGJ,EAAL,CASAK,QAAQC,IAAIN,GACZ,IAAMd,EAAO,CACTM,GAAIe,cACJpB,KAAMa,GAEVJ,EAAQV,GACRe,EAAW,SAdPJ,EAAM,CACFW,MAAO,cACPC,OAAQ,QACRC,SAAU,IACVC,YAAY,KAiBpB,SACI,eAAC,IAAD,CAAQC,GAAG,IAAX,UACI,cAAC,IAAD,CAAOC,QAAQ,SAASC,YAAY,qBAAqBC,MAAOf,EAASgB,SAAW,SAACb,GAAD,OAAOF,EAAWE,EAAEc,OAAOF,UAC/G,cAAC,IAAD,CAAQtB,YAAY,OAAOyB,GAAG,IAAIC,KAAK,SAAvC,4BCKDC,MAlCf,WAAgB,IAAD,EAEWrB,oBACxB,kBAAMsB,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,MAHtC,mBAERtD,EAFQ,KAEDuD,EAFC,KAMfC,qBAAU,WACRH,aAAaI,QAAQ,QAASN,KAAKO,UAAU1D,MAC5C,CAACA,IARW,MAsBwB2D,cAA/BC,EAtBO,EAsBPA,UAAWC,EAtBJ,EAsBIA,gBAEjB,OACI,eAAC,IAAD,CAAQvD,EAAG,EAAX,UACE,cAAC,IAAD,CAAYY,KAAoB,UAAb0C,EAAuB,cAAC,IAAD,IAAY,cAAC,IAAD,IAAYzC,QAAQ,OAAOC,KAAK,KAAK0C,UAAU,WAAWzC,QAASwC,IACzH,cAAC,IAAD,CAASE,GAAG,IAAIC,WAAW,YAAY5C,KAAK,MAAM6C,WAAW,6CAA6CC,OAAO,OAAjH,wBACA,cAACnE,EAAD,CAAUC,MAAQA,EAAQC,WAlBlC,SAAoBqB,GAClB,IAAM6C,EAAWnE,EAAMoE,QAAO,SAAApD,GAC5B,OAAOA,EAAKM,KAAOA,KAGvBiC,EAASY,MAcD,cAAC,EAAD,CAASzC,QAXjB,SAAiBV,GACfuC,EAAS,GAAD,mBAAKvD,GAAL,CAAYgB,Y,kBCnBtBqD,IAASC,OACL,cAAC,IAAMC,WAAP,UACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAiBC,iBAAiB,UAClC,cAAC,EAAD,SAGRC,SAASC,eAAe,W","file":"static/js/main.e59963e3.chunk.js","sourcesContent":["import React from 'react'\nimport { VStack, HStack, Text, IconButton, StackDivider, Spacer, Badge } from '@chakra-ui/react'\nimport {FaTrash} from 'react-icons/fa'\n\nexport default function ToDoList({todos, deleteTodo}) {\n\n    if (!todos.length) {\n        return (\n            <Badge colorScheme='green' p='4' m='4' borderRadius='lg'>There are no Todos! Yay!</Badge>\n        )\n    }\n\n    return (\n            <VStack\n            divider={<StackDivider />} \n            borderColor='gray.100' \n            borderWidth='2px' \n            p='4' \n            borderRadius='lg' \n            w='100%' \n            maxW={{base: '90vw', sm: '80vw', lg: '50vw', xl: '40vw'}}\n            alignItems='stretch'\n            >\n                {todos.map(todo=> (\n                    <HStack key={todo.id}>\n                        <Text>{todo.body}</Text>\n                        <Spacer />\n                        <IconButton icon={<FaTrash />} isRound='true' size='sm' onClick={() => deleteTodo(todo.id)} />\n                    </HStack>\n                ))}\n            </VStack>\n    );\n}\n","import React, { useState } from 'react';\nimport { HStack, Input, Button, useToast } from '@chakra-ui/react';\nimport { nanoid } from 'nanoid';\n\nfunction Addtodo({ addTodo }) {\n\n    const toast = useToast()\n\n    function handleSubmit(e) {\n        e.preventDefault();\n        if (!content){\n            toast({\n                title: \"No content.\",\n                status: \"error\",\n                duration: 2000,\n                isClosable: true,\n              });\n              return;\n        }\n        console.log(content);\n        const todo = {\n            id: nanoid(),\n            body: content,\n        };\n        addTodo(todo);\n        setContent('');\n    }\n    \n\n    const [content, setContent] = useState('');\n\n    return (\n        <form onSubmit={handleSubmit}>\n            <HStack mt='8'>\n                <Input variant='filled' placeholder='Add your todo item' value={content} onChange={ (e) => setContent(e.target.value)}/>\n                <Button colorScheme=\"pink\" px='8' type='submit'>Add Todo</Button>\n            </HStack>\n        </form>\n    )\n}\n\nexport default Addtodo;\n","import React, { useState, useEffect } from 'react';\nimport { Heading, VStack, IconButton,useColorMode } from '@chakra-ui/react';\nimport ToDoList from './components/ToDoList';\nimport AddToDo from './components/Addtodo'\nimport { FaSun, FaMoon } from 'react-icons/fa';\n\nfunction App() {\n\nconst [todos, setTodos] = useState(\n  () => JSON.parse(localStorage.getItem('todos')) || []\n);\n\nuseEffect(() => {\n  localStorage.setItem('todos', JSON.stringify(todos));\n}, [todos]);\n\nfunction deleteTodo(id) {\n  const newTodos = todos.filter(todo => {\n    return todo.id !== id\n  });\n\nsetTodos(newTodos);\n}\n\nfunction addTodo(todo) {\n  setTodos([...todos, todo])\n}\n\nconst { colorMode, toggleColorMode } = useColorMode()\n\n  return (\n      <VStack p={4}>\n        <IconButton icon={ colorMode ==='light' ? <FaSun /> : <FaMoon />} isRound='true' size='md' alignSelf='flex-end' onClick={toggleColorMode}/>\n        <Heading mb=\"8\" fontWeight=\"extrabold\" size=\"2xl\" bgGradient=\"linear(to-r, pink.500, pink.100, pink.300)\" bgClip=\"text\">To Do List</Heading>\n        <ToDoList todos={ todos } deleteTodo={ deleteTodo } />\n        <AddToDo addTodo={ addTodo } />\n      </VStack>\n  );\n}\n\nexport default App;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport {ChakraProvider,ColorModeScript } from '@chakra-ui/react';\n \n\nReactDOM.render(\n    <React.StrictMode>\n        <ChakraProvider>\n            <ColorModeScript initialColorMode='light' />\n            <App />\n        </ChakraProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);"],"sourceRoot":""}